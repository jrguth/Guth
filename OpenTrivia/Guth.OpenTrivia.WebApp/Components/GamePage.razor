@page "/games/{gameId}"
@inject IDialogService DialogService
@inject TriviaRealtimeDB RealtimeDB
@using Guth.OpenTrivia.WebApp.Components
@using Guth.OpenTrivia.Abstractions
@using Guth.OpenTrivia.Abstractions.Models
@using Guth.OpenTrivia.FirebaseDB
@using MudBlazor

<MudText Typo="Typo.h3" Color="Color.Primary" Align="Align.Center">Connection code: @Game.ConnectionCode</MudText>

@code {
    [Parameter] public Player Player { get; set; }
    [Parameter] public Game Game { get; set; }

    protected override Task OnParametersSetAsync()
    {
        RealtimeDB.SubscribeToGame(Game.Id, game => UpdateGameState(game));
        return base.OnParametersSetAsync();
    }

    private void UpdateGameState(Game updated)
    {
        Game = updated;
        StateHasChanged();
    }

}
